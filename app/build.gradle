apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.example.uipractice"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        //这个修改输出的APK路径
//        if (variant.buildType.name != "debug") {//防止AS无法安装debug包(apk)
//            variant.getPackageApplication().outputDirectory = new File(myPackageDir())
//        }
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            //这个修改输出APK的文件名
            apkData.outputFileName = "${appNamePrefix()}" +
                    variant.versionName + "_" +
                    "${releaseTime()}" + "_" +
                    variant.flavorName + "_" +
                    variant.buildType.name + "_" +
                    ".apk"
        }
    }

}

def appNamePrefix() {
    return "test"
}

String releaseTime() {
    Date date = new Date()
    String dates = date.format("yyyyMMdd_hhmmss", TimeZone.getTimeZone("UTC"))
    return dates
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:design:28.0.0'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.0-beta4'

//    implementation "io.reactivex.rxjava2:rxjava:2.2.13"
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // 网络
//    implementation("com.squareup.okhttp3:okhttp:4.2.2")
//    implementation("com.squareup.okhttp3:logging-interceptor:4.2.1")
//    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation 'com.squareup.retrofit2:converter-gson:2.6.3'
//    implementation 'com.squareup.retrofit2:retrofit:2.6.3'
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.3'

//    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    implementation project(":baselib")
    implementation project(":libcustom")
//    implementation "com.base.framwork:frawork:1.0.1"
}

// lifecycler
dependencies {
    def lifecycle_version = "2.1.0"

    // ViewModel and LiveData
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // For Kotlin use lifecycle-viewmodel-ktx
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // For Kotlin use lifecycle-viewmodel-ktx
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // For Kotlin use lifecycle-reactivestreams-ktx
//    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:+"
    // For Kotlin use lifecycle-reactivestreams-ktx

    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    implementation rootProject.ext.libs.libsAll
}

dependencies {
    implementation 'androidx.appcompat:appcompat:+'
    implementation 'androidx.constraintlayout:constraintlayout:+'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:+'
    implementation 'androidx.constraintlayout:constraintlayout:+'
}
